#!/usr/bin/env python3
import os
import sys

ZCODE_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ZCODE_PATH not in sys.path:
    sys.path.insert(0, ZCODE_PATH)

import argparse
import importlib
from zutils.rpyc_serializing_interface import start_function_service


def main():
    parser = argparse.ArgumentParser(
        description="ZCode Generic RPyC service for python function"
    )
    parser.add_argument(
        "--package", "-P", dest="package", nargs="*", default=[],
        help="all the paths to be included for python package search"
    )
    parser.add_argument(dest="function_spec", type=str, help="[ModuleName/FileName].[FunctionName]")
    parser.add_argument(dest="port", type=int, help="Server port")
    args = parser.parse_args()

    package_dirs = list(args.package)
    func_spec = args.function_spec
    if ":" in func_spec:
        func_spec_fn_func = func_spec.split(',')
        func_name = func_spec_fn_func[-1]
        py_filename = ":".join(func_spec_fn_func[:-1])
        module_name = os.path.splitext(os.path.basename(py_filename))[0]
        func_spec = module_name + "." + func_name
        package_dirs.append(os.path.dirname(py_filename))

    for pp in package_dirs:
        pp = os.path.abspath(pp)
        if pp not in sys.path:
            sys.path.insert(0, pp)

    func_spec_chain = func_spec.split('.')
    func_name = func_spec_chain[-1]
    module_name = ".".join(func_spec_chain[:-1])
    mod = importlib.import_module(module_name)
    func = getattr(mod, func_name)
    start_function_service(func, args.port)


if __name__ == "__main__":
    main()

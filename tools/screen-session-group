#!/usr/bin/env python3
import os
import sys

ZCODE_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ZCODE_PATH not in sys.path:
    sys.path.insert(0, ZCODE_PATH)

import argparse
from z_python_utils.os import screen_create_session_group, get_num_cuda_gpus


def main():
    parser = argparse.ArgumentParser(description="create target number of jobc watch session")
    parser.add_argument(dest="session_name", type=str, help="session name for jobc-watch and screen")
    parser.add_argument(dest="num_sessions", type=int, help="var dir for jobc")
    parser.add_argument(
        "--working-dir", "-W", dest="working_dir", type=str, default=None, help="working dir for jobc-watch"
    )
    parser.add_argument(
        "--gpus-per-session", "-g", dest="gpus_per_session", default=0, type=int,
        help="specify cuda visible devices automatically. 0 = not to set"
    )
    parser.add_argument(
        dest="cmd", nargs=argparse.REMAINDER, help="the command to run"
    )
    args = parser.parse_args()

    if args.gpus_per_session > 0:
        gpus_per_session = args.gpus_per_session
        num_gpus = get_num_cuda_gpus()
    else:
        gpus_per_session = 0
        num_gpus = -1

    cmd = " ".join('"%s"' % x.replace('"', '\"') for x in args.cmd)

    def _env_var_gen(_i: int):
        _env_dict = dict()
        if gpus_per_session > 0 and num_gpus > 0:
            _gpu_ids = [str(_j % num_gpus) for _j in range(_i * gpus_per_session, (_i + 1) * gpus_per_session)]
            _env_dict['CUDA_VISIBLE_DEVICES'] = ",".join(_gpu_ids)
        if not _env_dict:
            _env_dict = None
        return _env_dict

    def _cmd_gen(_i: int):
        _cmd = cmd
        _env_vars = _env_var_gen(_i)
        if _env_vars:
            for _k, _v in _env_vars.items():
                _cmd = f'export {_k}="{_v}"; '
        return _cmd

    screen_create_session_group(
        args.session_name, args.num_sessions, cmd_gen=_cmd_gen
    )


if __name__ == "__main__":
    main()

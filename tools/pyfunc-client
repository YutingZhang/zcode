#!/usr/bin/env python3
import os
import sys

ZCODE_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ZCODE_PATH not in sys.path:
    sys.path.insert(0, ZCODE_PATH)

import argparse
from zutils.rpyc_serializing_interface import FunctionServiceConnection

import logging
logging.basicConfig(
    format='%(asctime)s [%(levelname)-8s] %(message)s',
    level=logging.INFO,
    datefmt='%Y-%m-%d %H:%M:%S'
)


def main():

    parser = argparse.ArgumentParser(
        description="ZCode Generic RPyC Client for python function"
    )
    parser.add_argument(dest="host_port", type=str, help="ServerName:Port")
    parser.add_argument(
        "--wait-for-server-start", "-w", dest="wait_for_server_start",
        action="store_true", help="when specified, wait for server to start"
    )

    client_cmd_args = []
    func_cmd_args = []
    active_args = client_cmd_args
    for a in sys.argv[1:]:
        active_args.append(a)
        if active_args is client_cmd_args and not a.startswith("-"):
            active_args = func_cmd_args

    args = parser.parse_args(client_cmd_args)

    assert ":" in args.host_port, "must specify port"
    hostname, port = args.host_port.split(":")
    port = int(port)

    conn = FunctionServiceConnection(
        hostname=hostname, port=port, retry_interval_until_success=1 if args.wait_for_server_start else -1
    )
    conn.run_from_cmd_args(func_cmd_args)


if __name__ == "__main__":
    main()

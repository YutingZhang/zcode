#!/usr/bin/env python3
import os
import sys

ZCODE_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ZCODE_PATH not in sys.path:
    sys.path.insert(0, ZCODE_PATH)

import argparse
import importlib
from zutils.rpyc_serializing_interface import start_function_service
from z_python_utils.classes import load_obj_from_file


import logging
logging.basicConfig(
    format='%(asctime)s [%(levelname)-8s] %(message)s',
    level=logging.INFO,
    datefmt='%Y-%m-%d %H:%M:%S'
)

logger = logging.getLogger()


def main():
    parser = argparse.ArgumentParser(
        description="ZCode Generic RPyC Service for python function"
    )
    parser.add_argument(
        "--package", "-P", dest="package", nargs="*", default=[],
        help="all the paths to be included for python package search"
    )
    parser.add_argument(dest="function_spec", type=str, help="[ModuleName/FileName].[FunctionName]")
    parser.add_argument(dest="port", type=int, help="Server port")
    args = parser.parse_args()

    logger.info("Load module")
    package_dirs = list(args.package)
    func = load_obj_from_file(args.function_spec, package_dirs=package_dirs)
    start_function_service(func, args.port)


if __name__ == "__main__":
    main()
